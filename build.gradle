buildscript {
    ext {
        kotlinVersion = "1.3.11"
        springBootVersion = "2.1.1.RELEASE"
        awsSdkSecretsmanagerVersion = "1.11.475"
        jacksonVersion = "2.9.8"
        guavaVersion = "27.0.1-jre"
        dokkaVersion = "0.9.17"

        // Test
        mockkVersion = "1.8.13"
        junitVersion = "5.3.2"
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
    }
}

plugins {
    // Use task dependencyUpdates to check for updates
    id "com.github.ben-manes.versions" version "0.20.0"
}

apply plugin: "kotlin"
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = 'de.ottonow'
archivesBaseName = 'aws-secrets-manager-property-source'
version = '0.1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    compile "com.amazonaws:aws-java-sdk-secretsmanager:$awsSdkSecretsmanagerVersion"
    compile "com.google.guava:guava:$guavaVersion"
    compileOnly "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compileOnly "org.springframework.boot:spring-boot-starter:$springBootVersion"

    testCompile 'com.willowtreeapps.assertk:assertk-jvm:0.12'
    testCompile "io.mockk:mockk:$mockkVersion"
    testCompile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
        exclude group: "junit", module: "junit"
        exclude group: "org.mockito", module: "mockito-core"
    }

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: project.javadoc) {
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }

            pom {
                name = 'aws-secrets-manager-property-source'
                description = 'Kotlin library to resolve secrets in property files via AWS Secretsmanager in a Spring Boot application'
                url = 'https://github.com/ottonow/aws-secrets-manager-property-source'
                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'https://github.com/ottonow/aws-secrets-manager-property-source/blob/master/LICENSE'
                    }
                }
                scm {
                    url = 'https://github.com/ottonow/aws-secrets-manager-property-source'
                    connection = 'scm:https://github.com/ottonow/aws-secrets-manager-property-source.git'
                    developerConnection = 'scm:git://github.com/ottonow/aws-secrets-manager-property-source.git'
                }
                developers {
                    developer {
                        id = 'kevcodez'
                        name = 'Kevin Gr√ºneberg'
                        email = 'k.grueneberg1994@gmail.com'
                    }
                }
            }


        }
    }

    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username nexusUsername
                password nexusPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
buildscript {
    ext {
        kotlinVersion = "1.3.50"
        springBootVersion = "2.1.9.RELEASE"
        springCloudVersion = "Greenwich.SR3"
        dokkaVersion = "0.10.0"

        // Test
        mockkVersion = "1.9.3"
        atriumVersion = "0.8.0"
        junitExtensionVersion = "2.3.0"
        testContainersVersion = "1.12.2"
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
    }
}

plugins {
    // Use task dependencyUpdates to check for updates
    id "com.github.ben-manes.versions" version "0.27.0"
    id "org.jlleitschuh.gradle.ktlint" version "9.0.0"
    id 'io.codearte.nexus-staging' version '0.21.1'
}

apply plugin: "kotlin"
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = 'com.github.maccamlc'
archivesBaseName = 'secrets-property-source'
version = '0.1.0'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation(platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion"))
    implementation(platform("org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"))

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "com.amazonaws:aws-java-sdk-secretsmanager"
    implementation "com.amazonaws:aws-java-sdk-ssm"
    implementation "com.github.ben-manes.caffeine:caffeine"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    compileOnly "org.springframework.boot:spring-boot-starter"

    testImplementation "ch.tutteli.atrium:atrium-cc-en_GB-robstoll:$atriumVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "org.apache.commons:commons-lang3"
    testImplementation "io.github.glytching:junit-extensions:$junitExtensionVersion"
    testImplementation "org.testcontainers:localstack:$testContainersVersion"
    testImplementation "org.springframework.boot:spring-boot-starter-web"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "junit", module: "junit"
        exclude group: "org.mockito", module: "mockito-core"
    }
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: project.javadoc) {
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }

            pom {
                name = 'secrets-property-source'
                description = 'Kotlin library to resolve secrets in property files via AWS Secretsmanager/Parameter Store in a Spring Boot application'
                url = 'https://github.com/maccamlc/secrets-property-source'
                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'https://github.com/maccamlc/secrets-property-source/blob/master/LICENSE'
                    }
                }
                scm {
                    url = 'https://github.com/maccamlc/secrets-property-source'
                    connection = 'scm:https://github.com/maccamlc/secrets-property-source.git'
                    developerConnection = 'scm:git://github.com/maccamlc/secrets-property-source.git'
                }
                developers {
                    developer {
                        id = 'maccamlc'
                        name = 'Matthew McMahon'
                        email = 'maccamlc@gmail.com'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username nexusUsername
                password nexusPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

nexusStaging {
    stagingProfileId = "8ee8ec27c8894"
}

ktlint {
    outputToConsole = true
    ignoreFailures = false
}